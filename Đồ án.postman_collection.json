{
	"info": {
		"_postman_id": "a1678641-e5a2-4bbc-90a5-25677b01c371",
		"name": "Đồ án",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21309548"
	},
	"item": [
		{
			"name": "auth",
			"item": [
				{
					"name": "register",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"sex\", (Math.random()>=0.5)? 1 : 0);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"type response is success\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.type).to.eql(\"success\");\r",
									"});\r",
									"\r",
									"let req = JSON.parse(pm.request.body.raw)\r",
									"pm.collectionVariables.set(\"username\", req.username);\r",
									"pm.collectionVariables.set(\"password\", req.password);\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomUserName}}\",\r\n    \"username\": \"{{$randomUserName}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"password\": \"12345678\",\r\n    \"role\": \"user\",\r\n    \"sex\": {{sex}},\r\n    \"image\": \"\",\r\n    \"address\": \"{{$randomStreetAddress}}\",\r\n    \"phone\": \"{{$randomPhoneNumber}}\",\r\n    \"bank\": \"{{$randomBankAccount}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/auth/register",
							"host": [
								"{{host}}"
							],
							"path": [
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"type response is success\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.type).to.eql(\"success\");\r",
									"});\r",
									"\r",
									"pm.test(\"response token not empty\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.token).not.empty\r",
									"});\r",
									"\r",
									"let req = JSON.parse(pm.request.body.raw)\r",
									"pm.collectionVariables.set(\"accessToken\", req.token);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"console.log(pm.collectionVariables.get(\"username\"))\r",
									"console.log(pm.collectionVariables.get(\"password\"))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"{{username}}\",\r\n    \"password\":\"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/auth/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "admin login",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"Brennon46\",\r\n    \"password\":\"12345678\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/auth/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "book api",
			"item": [
				{
					"name": "create",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Test status of response\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.type).to.eql(\"success\");\r",
									"});\r",
									"\r",
									"let req = JSON.parse(pm.request.body.raw)\r",
									"pm.collectionVariables.set(\"id_book\", req.id);\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\":\"{{$randomUUID}}\",\r\n    \"name\": \"{{$randomProductName}}\",\r\n    \"discounted\": {{$randomInt}},\r\n    \"price_import\": {{$randomPrice}},\r\n    \"price_export\": {{$randomPrice}},\r\n    \"sold\": {{$randomInt}},\r\n    \"views\": {{$randomInt}},\r\n    \"published_date\": \"{{$isoTimestamp}}\",\r\n    \"quantity\": {{$randomInt}},\r\n    \"publisher\": \"{{$randomFullName}}\",\r\n    \"author\": \"{{$randomFullName}}\",\r\n    \"description\": \"{{$randomLoremSentences}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/books",
							"host": [
								"{{host}}"
							],
							"path": [
								"books"
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Test status of response\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.type).to.eql(\"success\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomProductName}}\",\r\n    \"discounted\": {{$randomInt}},\r\n    \"price_import\": {{$randomPrice}},\r\n    \"price_export\": {{$randomPrice}},\r\n    \"sold\": {{$randomInt}},\r\n    \"views\": {{$randomInt}},\r\n    \"published_date\": \"{{$isoTimestamp}}\",\r\n    \"quantity\": {{$randomInt}},\r\n    \"publisher\": \"{{$randomFullName}}\",\r\n    \"author\": \"{{$randomFullName}}\",\r\n    \"description\": \"{{$randomLoremSentences}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/books/{{id_book}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"books",
								"{{id_book}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Test status of response\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.type).to.eql(\"success\");\r",
									"});\r",
									"\r",
									"pm.test(\"Test data of detail\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data).not.empty\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/books/{{id_book}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"books",
								"{{id_book}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Test status of response\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.type).to.eql(\"success\");\r",
									"});\r",
									"\r",
									"pm.test(\"Test leng of data in response\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.length).greaterThan(0);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/books?page=1&limit=2",
							"host": [
								"{{host}}"
							],
							"path": [
								"books"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "2"
								}
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{accessTokenTest}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"variable": [
		{
			"key": "name",
			"value": ""
		},
		{
			"key": "password",
			"value": ""
		},
		{
			"key": "username",
			"value": ""
		},
		{
			"key": "token",
			"value": ""
		},
		{
			"key": "accessToken",
			"value": ""
		},
		{
			"key": "id_book",
			"value": ""
		}
	]
}